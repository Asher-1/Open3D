# Adapted from: https://acaird.github.io/computers/2020/02/11/github-google-container-cloud-run
name: Google Cloud Ubuntu GPU CI (docker)

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - ssheorey/gce-gpu-ci-docker
  pull_request:
    types: [opened, reopened, synchronize]    # Rebuild on new pushes to PR

env:
  GCE_PROJECT: ${{ secrets.GCE_PROJECT }}
  GCE_GPU_CI_SA: ${{ secrets.GCE_GPU_CI_SA }}

jobs:
  build-push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-18.04

    steps:
      - name: GCloud setup
        uses: actions/checkout@v2       # Checkout code

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '302.0.0'    # Fixed to avoid dependency on API changes
          service_account_key: ${{ secrets.GCE_SA_KEY_GPU_CI }}
          project_id: ${{ secrets.GCE_PROJECT }}
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh gcloud-setup

      # Build the Docker image
      - name: Build
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh docker-build

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh docker-push


  build-install-test:
    name: Build, install and run unit tests
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      max-parallel: 1     # Limit parallel runs to max GPU quota (4)
      matrix:
        CI_CONFIG_ID: [2, 3, 4]   # These configurations need GPU

    env:
      CI_CONFIG_ID: ${{ matrix.CI_CONFIG_ID }}

    steps:
      - name: GCloud setup
        uses: actions/checkout@v2       # Checkout code

        # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '302.0.0'    # Fixed to avoid dependency on API changes
          service_account_key: ${{ secrets.GCE_SA_KEY_GPU_CI }}
          project_id: ${{ secrets.GCE_PROJECT }}
          export_default_credentials: true
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh gcloud-setup

      - name: Create VM
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh create-vm

      - name: Config, build and run unit tests
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh run-ci

      - name: Delete VM
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh delete-vm

  cleanup:
    name: Cleanup container images and delete VM
    runs-on: ubuntu-18.04

    steps:
      - name: GCloud setup
        uses: actions/checkout@v2       # Checkout code

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '302.0.0'    # Fixed to avoid dependency on API changes
          service_account_key: ${{ secrets.GCE_SA_KEY_GPU_CI }}
          project_id: ${{ secrets.GCE_PROJECT }}
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh gcloud-setup

      - name: Delete container image
        run: |
          ./util/docker/open3d-gpu/scripts/gce-ubuntu-docker-run.sh delete-image
